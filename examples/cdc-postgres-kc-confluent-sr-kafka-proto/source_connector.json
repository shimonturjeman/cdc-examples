{
  "name": "postgres-connector",
  "config": {
    "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
    "database.hostname": "postgres",
    "database.port": "5432",
    "database.user": "postgres",
    "database.password": "postgres",
    "database.dbname": "postgres",
    "database.server.name": "dbserver1",
    "table.include.list": "public.device",
    "plugin.name": "pgoutput",
    "slot.name": "debezium_slot",
    "publication.autocreate.mode": "filtered",
    "database.history.kafka.bootstrap.servers": "cdc-demo-kafka-1:29092,cdc-demo-kafka-2:29093,cdc-demo-kafka-3:29094",
    "database.history.kafka.topic": "schema-changes.postgres",
    "key.converter": "org.apache.kafka.connect.storage.StringConverter",
    "key.converter.schemas.enable": "false",
    "key.converter.schema.registry.url":"http://cdc-demo-schema-registry:8080",
    "value.converter":"io.confluent.connect.protobuf.ProtobufConverter",
    "value.converter.schemas.enable": "false",
    "value.converter.schema.registry.url":"http://cdc-demo-schema-registry:8080",
    "transforms": "ExtractValue,ExtractKeyFromValue,KeyToString,TopicRouter",    
    "transforms.ExtractValue.type": "org.apache.kafka.connect.transforms.ExtractField$Value",
    "transforms.ExtractValue.field": "after",
    "transforms.ExtractKeyFromValue.type": "org.apache.kafka.connect.transforms.ExtractField$Key",
    "transforms.ExtractKeyFromValue.field": "id",
    "transforms.KeyToString.type": "org.apache.kafka.connect.transforms.Cast$Key",
    "transforms.KeyToString.spec": "string",
    "transforms.TopicRouter.type": "org.apache.kafka.connect.transforms.RegexRouter",
    "transforms.TopicRouter.regex": "dbserver1\\.public\\.device",
    "transforms.TopicRouter.replacement": "device",
    "topic.prefix": "dbserver1",
    "auto.create.topics.enable": "false",
    "value.converter.auto.register.schemas": "true",
    "key.converter.auto.register.schemas": "true"
  }
}
